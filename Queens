#include<stdio.h>
#include<stdlib.h>


int x[13];

int st[13],sol;


bool eValid(int k) {
	for (int i = 1; i < k; i++)
		if ((x[st[k]] == x[st[i]]) || (st[k] - i == abs(x[st[k]] - x[st[i]]))) {
			return false;
		}
	return true;
}

int backtrack(int n) {
	int eSolutie, k;
	k = 1;
	x[k] = 0;
	int nrSolutii = 0;
	while (k > 0) {
		eSolutie = 0;
		while ((x[st[k]] < n) && (!eSolutie)) {
			x[st[k]]++;
			eSolutie = eValid(k);
		}
		if (!eSolutie) {
			k--;
		}
		else {
			if (k == 4) {
				nrSolutii++;
			}
			else {
				k++;
				x[st[k]] = 0;
			}
		}
	}
	return nrSolutii;
}

void inline init(int k)
{
	st[k] = st[k - 1];
}

int succesor(int k)
{
	if (st[k]<10)
	{
		++st[k];
		return 1;
	}
	return 0;
}

int solutie(int k)
{
	return k == 4;
}
void bkt(int k)
{
	init(k);
	while (succesor(k))
	{
		if (solutie(k))
		{
			int mn = 1;
			sol += backtrack(10);
			for (mn = 1;mn <= 10;++mn)
				x[mn] = 0;
		}
		else
			bkt(k + 1);
	}
}

int main() {
	bkt(1);

	printf("%d", sol);
	
	return 0;
}
